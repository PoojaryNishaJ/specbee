services:
  custom_service:  #machine name of the service.
    class: 'Drupal\nishaj_exercise\CustomService'  # class name in which it should get called
    arguments: ['@config.factory']     # The arguments key is used to specify any arguments that the service's constructor requires.
    #when we want to use same functionality in multiple places we use services.
  custom_events_subscriber:    #machine name of the service.
    class: '\Drupal\nishaj_exercise\EventSubscriber\CustomConfigEventsSubscriber'   # class name in which it should get called.
    arguments: ['@database', '@messenger','@date.formatter']
    tags:                              # tag is applied to the service, indicating that it should be treated as an event subscriber.
      - { name: 'event_subscriber' }   # tag name.

<?php

namespace Drupal\custom_service;

use Drupal\Core\Session\AccountInterface;

class CustomService {
/**
   * The account object.
   *
   * @var \Drupal\Core\Session\AccountInterface
   */
  protected $user;

    /**
   * Constructs a new CustomService class.
   *
   * @param \Drupal\Core\Session\AccountInterface $user
   *   The current user.
   */
  public function __construct(AccountInterface $user) {
    $this->user = $user;
  }


    public function text() {
        return "User Name: " . $this->user->getDisplayName();
    }

}
